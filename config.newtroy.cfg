---

### NEWTROY specific settings
#

newtroy_vpn_server_hostname: newtroy

# Set the commonName of the server certificate
newtroy_server_cert_common_name: "{% if newtroy_vpn_server_fqdn %}{{ newtroy_vpn_server_fqdn }}{% else %}{{ IP_subject_alt_name }}{% endif %}"

# Use a common var for the config dir
newtroy_server_configs: "configs/{{ newtroy_server_cert_common_name }}"

# Offsets for client and server IP addresses
# The server offset is the IP address assigned to the server itself
# The client offset is the start address for all clients
# WARNING: Take care to ensure that these values will result in IP addresses within the vpn_network range
# Example:
#   Configuration:
#     users: [user1, user2]
#     vpn_network: 10.19.48.0/24
#     vpn_network_ipv6: 'fd9d:bc11:4020::/48'
#     newtroy_network_server_offset: 1
#     newtroy_network_client_offset: 11
#   Result:
#     The server is assigned an IP address of 10.19.48.1 (10.19.48.0 + 1)
#     user1 and user2 are assigned IP addresses of 10.19.48.11 and 10.19.48.12 respectively
#     (10.19.58.0 + 11 and + 12 respectively)
newtroy_network_server_offset: 1
newtroy_network_client_offset: 11

# A "namespace" that can be used when creating "name-based UUIDs" per RFC 4122
# This will return the same value for the same input URL every time
newtroy_algo_namespace: "{{ 'https://github.com/mrled/algo/tree/newtroy' | newtroy_url_nbuuid }}"

# Used for setting a DNS name for the VPN server
newtroy_vpn_server_parent_domain: micahrl.com
newtroy_vpn_server_fqdn: "{{ newtroy_vpn_server_hostname }}.{{ newtroy_vpn_server_parent_domain }}"
newtroy_vpn_server_hosted_zone_id: Z3HVGWA7OSS1TK

# Fix the stupid config file path
newtroy_config_dir: configs/{{ newtroy_vpn_server_fqdn }}
# Fix the stupid venv dir path
# Must be full path because of https://github.com/ansible/ansible/issues/22967
newtroy_venvs_dir: "{{ ansible_env.HOME }}/.venvs"

# Used for resolving hosts within the VPN, not connecting to the VPN
# - Set BetweenClients_DROP to N so that clients can actually talk to each other
# - If dns_adblocking role is enabled, configure dnsmasq to resolve the clients
# - If the dns_vpn_internal_network_route53 tag is defined,
#   and newtroy_vpn_internal_hosted_zone_id is set to a valid Route53 hosted zone,
#   and you have provided valid AWS credentials,
#   create a Route53 record for each client
# Connected users will be able to communicate with each other using $user.$newtroy_vpn_internal_domain DNS names
newtroy_vpn_internal_domain: internal.micahrl.com

# If defined, update a Route53 Hosted Zone as described above
newtroy_vpn_internal_hosted_zone_id: Z2OOB3F1JEVLME

aws_server_name: newtroy

### Upstream Algo settings
# See config.cfg and/or input.yml for more info

users:
  - andraia
  - glitch
  - architect
  - magrassee

endpoint: "{{ newtroy_vpn_server_fqdn }}"
server_name: "{{ newtroy_vpn_server_hostname }}"
provider: ec2
ondemand_cellular: no
ondemand_wifi: no
local_dns: no
ssh_tunneling: no
windows: yes
store_cakey: yes
keys_clean_all: no
BetweenClients_DROP: no
region: us-east-2
unattended_reboot:
  enabled: true
  time: 10:00

# Change from default to allow other machines to use it
local_service_ip: "{{ vpn_network | ipaddr(newtroy_network_server_offset) | ipaddr('address') }}"

# This unfortunately named variable is used in the vpn role to indicate that the VPN server should
# generate a certificate with the value of subjectAltName_DNS as a DNS entry in the cert's SubjectAltName field
domain: true
# If set, this variable is used by the vpn role to assign a DNS subject alt name to the VPN server cert
subjectAltName_DNS: "{{ newtroy_vpn_server_fqdn }}"

### From the NEWTROY vault

aws_access_key: "{{ vault_aws_access_key }}"
aws_secret_key: "{{ vault_aws_secret_key }}"

# If you have added a user to `config.cfg` and are redeploying,
# this variable MUST be set to the value that Algo generated on the first deployment
# or else you'll get an error like 'unable to load CA private key'
# If it's your first time deploying,
# you can leave this blank causing Algo to generate a password for you
# and display it at the end.
CA_password: "{{ vault_easyrsa_CA_password }}"

# This is just a nice thing to pass in
# so my fucking client PKCS12 certificate passwords don't change every fucking time I redeploy
p12_export_password: "{{ vault_p12_export_password }}"
