---

- name: Register this server namespace UUID
  set_fact:
    newtroy_this_server_namespace: "{{ IP_subject_alt_name | newtroy_nbuuid(newtroy_algo_namespace) }}"

- name: Register derivative UUIDs
  set_fact:
    # "name-based UUIDs" per RFC4122. Will return the same value given the same "name" (pipe data)
    # and the same "namespace" (passed to the newtroy_nbuuid function in parens)
    pkcs12_PayloadCertificateUUID: "{{ 'pkcs12_PayloadCertificateUUID' | newtroy_nbuuid(newtroy_this_server_namespace) }}"
    VPN_PayloadIdentifier: "{{ 'VPN_PayloadIdentifier' | newtroy_nbuuid(newtroy_this_server_namespace) }}"
    CA_PayloadIdentifier: "{{ 'CA_PayloadIdentifier' | newtroy_nbuuid(newtroy_this_server_namespace) }}"

- name: Register p12 PayloadContent
  shell: cat private/{{ item }}.p12 | base64
  register:  PayloadContent
  args:
    chdir: "{{ newtroy_server_configs }}/pki/"
  with_items: "{{ users }}"

- name: Set facts for mobileconfigs
  set_fact:
    PayloadContentCA: "{{ lookup('file' , '{{ newtroy_server_configs }}/pki/cacert.pem')|b64encode }}"

- name: Build the mobileconfigs
  template:
    src: mobileconfig.j2
    dest: "{{ newtroy_server_configs }}/{{ item.0 }}.mobileconfig"
    mode: 0600
  with_together:
    - "{{ users }}"
    - "{{ PayloadContent.results }}"
  no_log: True

- name: Build the strongswan app android config
  template:
    src: sswan.j2
    dest: "{{ newtroy_server_configs }}/android_{{ item.0 }}.sswan"
    mode: 0600
  with_together:
    - "{{ users }}"
    - "{{ PayloadContent.results }}"
  no_log: True

- name: Build the android helper html
  template:
    src: android_html_helper.j2
    dest: "{{ newtroy_server_configs }}/android_{{ item.0 }}_helper.html"
    mode: 0600
  with_together:
    - "{{ users }}"
  no_log: True

- name: Build the client ipsec config file
  template:
    src: client_ipsec.conf.j2
    dest: "{{ newtroy_server_configs }}/ipsec_{{ item }}.conf"
    mode: 0600
  with_items:
    - "{{ users }}"

- name: Build the client ipsec secret file
  template:
    src: client_ipsec.secrets.j2
    dest: "{{ newtroy_server_configs }}/ipsec_{{ item }}.secrets"
    mode: 0600
  with_items:
    - "{{ users }}"

- name: Create the windows check file
  file:
    state: touch
    path: "{{ newtroy_server_configs }}/.supports_windows"
  when: Win10_Enabled is defined and Win10_Enabled == "Y"

- name: Check if the windows check file exists
  stat:
    path: "{{ newtroy_server_configs }}/.supports_windows"
  register: supports_windows

- name: Build the windows client powershell script
  template:
    src: client_windows.ps1.j2
    dest: "{{ newtroy_server_configs }}/windows_{{ item.0 }}.ps1"
    mode: 0600
  when: Win10_Enabled is defined and Win10_Enabled == "Y" or supports_windows.stat.exists == true
  with_together:
    - "{{ users }}"
    - "{{ PayloadContent.results }}"

- name: Restrict permissions for the local private directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0700
  with_items:
    - "{{ newtroy_server_configs }}"
