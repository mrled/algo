config setup
    uniqueids=replace  # if the same user connects twice, replace the old connection with the new one
    charondebug="ike {{ strongswan_log_level }}, knl {{ strongswan_log_level }}, cfg {{ strongswan_log_level }}, net {{ strongswan_log_level }}, esp {{ strongswan_log_level }}, dmn {{ strongswan_log_level }},  mgr {{ strongswan_log_level }}"

conn %default
    fragmentation=yes
    rekey=no
    dpdaction=clear
    keyexchange=ikev2
    compress=yes
    dpddelay=35s

{% if Win10_Enabled is defined and Win10_Enabled == "Y" %}
    ike={{ ciphers.compat.ike }}
    esp={{ ciphers.compat.esp }}
{% else %}
    ike={{ ciphers.defaults.ike }}
    esp={{ ciphers.defaults.esp }}
{% endif %}

    left=%any
    leftauth=pubkey
    leftid={{ newtroy_server_cert_common_name }}
    leftcert={{ newtroy_server_cert_common_name }}.crt
    leftsendcert=always
    leftsubnet=0.0.0.0/0,::/0

    right=%any
    rightauth=pubkey
{% if local_dns|d(false)|bool == true or dns_encryption|d(false)|bool == true %}
    rightdns={{ local_service_ip }}
{% else %}
    rightdns={% for host in dns_servers.ipv4 %}{{ host }}{% if not loop.last %},{% endif %}{% endfor %}{% if ipv6_support %},{% for host in dns_servers.ipv6 %}{{ host }}{% if not loop.last %},{% endif %}{% endfor %}{% endif %}
{% endif %}

# Client configs
# example: https://www.strongswan.org/testing/testresults/ikev2/config-payload/, especially moon.ipsec.conf
# Note that each user gets _two_ conn stanzas, because some operating systems submit their ID as
# the bare 'CommonName' of their cert, and some submit it as ASN.1-encoded '/CN=CommonName'

{% for user in users %}

conn AlgoUser-{{ user }}
    rightid={{ user }}
    rightsourceip={{ vpn_network | ipaddr(loop.index + newtroy_network_client_offset) | ipaddr('address') }}
    auto=add
conn AlgoUser-CN{{ user }}
    rightid="/CN={{ user }}"
    rightsourceip={{ vpn_network | ipaddr(loop.index + newtroy_network_client_offset) | ipaddr('address') }}
    auto=add

{% endfor %}